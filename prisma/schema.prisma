generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model branches {
  id            Int       @id @default(autoincrement())
  branch_name   String    @db.VarChar(255)
  branch_status String    @db.VarChar(255)
  created_at    DateTime? @db.Timestamp(0)
  updated_at    DateTime? @db.Timestamp(0)
  users         users[]
}

model car_brands {
  id               Int       @id @default(autoincrement())
  car_brand_name   String    @db.VarChar(255)
  car_brand_status String    @db.VarChar(255)
  created_at       DateTime? @db.Timestamp(0)
  updated_at       DateTime? @db.Timestamp(0)
}

model car_models {
  id               Int       @id @default(autoincrement())
  car_brand_id     Int
  car_model_name   String    @db.VarChar(255)
  car_model_status String    @db.VarChar(255)
  created_at       DateTime? @db.Timestamp(0)
  updated_at       DateTime? @db.Timestamp(0)
}

model car_sub_models {
  id                   Int       @id @default(autoincrement())
  car_model_id         Int
  car_sub_model_name   String    @db.VarChar(255)
  car_sub_model_status String    @db.VarChar(255)
  created_at           DateTime? @db.Timestamp(0)
  updated_at           DateTime? @db.Timestamp(0)
}

model car_types {
  id              Int       @id @default(autoincrement())
  car_type_name   String    @db.VarChar(255)
  car_type_status String    @db.VarChar(255)
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)
}

model cars {
  id                     Int       @id @default(autoincrement())
  branch_id              Int
  car_type_id            Int
  car_brand_id           Int
  car_model_id           Int
  car_sub_model_id       Int?
  license_plate          String    @db.VarChar(255)
  license_plate_province String    @db.VarChar(255)
  year                   String    @db.VarChar(255)
  color                  String    @db.VarChar(255)
  rental_per_day         String    @db.VarChar(255)
  driver_per_day         String    @db.VarChar(255)
  deposit                String    @db.VarChar(255)
  created_at             DateTime? @db.Timestamp(0)
  updated_at             DateTime? @db.Timestamp(0)
}

model customers {
  id                             Int       @id @default(autoincrement())
  customer_name                  String    @db.VarChar(255)
  customer_nickname              String?   @db.VarChar(255)
  customer_sex                   String    @db.VarChar(255)
  customer_tel                   String    @db.VarChar(255)
  customer_tel_backup            String?   @db.VarChar(255)
  customer_citizen_id            String?   @db.VarChar(255)
  customer_citizen_expiry        String?   @db.VarChar(255)
  customer_driver_license        String?   @db.VarChar(255)
  customer_driver_license_expiry String?   @db.VarChar(255)
  created_at                     DateTime? @db.Timestamp(0)
  updated_at                     DateTime? @db.Timestamp(0)
}

model migrations {
  id        Int    @id @default(autoincrement())
  migration String @db.VarChar(255)
  batch     Int
}

model personal_access_tokens {
  id             Int       @id @default(autoincrement())
  tokenable_type String    @db.VarChar(255)
  tokenable_id   Int
  name           String    @db.VarChar(255)
  token          String    @unique(map: "personal_access_tokens_token_unique") @db.VarChar(64)
  abilities      String?   @db.Text
  last_used_at   DateTime? @db.Timestamp(0)
  expires_at     DateTime? @db.Timestamp(0)
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)

  @@index([tokenable_type, tokenable_id], map: "personal_access_tokens_tokenable_type_tokenable_id_index")
}

model sessions {
  id            String  @id @db.VarChar(255)
  user_id       Int?
  ip_address    String? @db.VarChar(45)
  user_agent    String? @db.Text
  payload       String  @db.LongText
  last_activity Int

  @@index([last_activity], map: "sessions_last_activity_index")
  @@index([user_id], map: "sessions_user_id_index")
}

model users {
  id                Int       @id @default(autoincrement())
  branch            branches? @relation(fields: [branch_id], references: [id])
  branch_id         Int
  name              String    @db.VarChar(255)
  email             String    @unique(map: "users_email_unique") @db.VarChar(255)
  email_verified_at DateTime? @db.Timestamp(0)
  level             String?   @db.VarChar(255)
  password          String    @db.VarChar(255)
  status            String    @db.VarChar(255)
  remember_token    String?   @db.VarChar(100)
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)
}
