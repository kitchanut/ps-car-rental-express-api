generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model facebook_messages {
  id           Int      @id @default(autoincrement())
  sender_id    String   @db.VarChar(255)
  recipient_id String   @db.VarChar(255)
  message      String   @db.Text
  created_at   DateTime @default(now()) @db.Timestamp(0)
}

model bookings {
  id                   Int                    @id @default(autoincrement())
  branch_id            Int?
  booking_date         DateTime               @default(now()) @db.Timestamp(0)
  booking_number       String                 @db.VarChar(255)
  customer             customers              @relation(fields: [customer_id], references: [id])
  customer_id          Int
  car                  cars                   @relation(fields: [car_id], references: [id])
  car_id               Int
  pickup_date          DateTime               @default(now()) @db.Timestamp(0)
  pickup_location      String                 @db.VarChar(255)
  pickup_branch_id     Int
  pickup_branch        branches               @relation("pickup_branch", fields: [pickup_branch_id], references: [id])
  return_date          DateTime               @default(now()) @db.Timestamp(0)
  return_location      String                 @db.VarChar(255)
  return_branch_id     Int
  return_branch        branches               @relation("return_branch", fields: [return_branch_id], references: [id])
  rental_per_day       Int
  rental               Int
  required_driver      Boolean                @default(false)
  driver_per_day       Int                    @default(0)
  extra_charge         Int
  discount             Int
  sub_total            Int
  vat_percent          Int
  vat_amount           Int
  total                Int
  deposit              Int
  net_total            Int
  booking_note         String?                @db.Text
  booking_status       String                 @db.VarChar(255)
  created_at           DateTime?              @default(now()) @db.Timestamp(0)
  updated_at           DateTime?              @default(now()) @updatedAt @db.Timestamp(0)
  account_transactions account_transactions[]
  uploads              uploads[]
  booking_pickups      booking_pickups?
  booking_returns      booking_returns?
}

model booking_pickups {
  id          Int      @id @default(autoincrement())
  booking_id  Int      @unique
  pickup_date DateTime @default(now()) @db.Timestamp(0)
  pickup_note String?  @db.Text
  booking     bookings @relation(fields: [booking_id], references: [id])
}

model booking_returns {
  id             Int      @id @default(autoincrement())
  booking_id     Int      @unique
  return_date    DateTime @default(now()) @db.Timestamp(0)
  return_penalty Int
  return_note    String?  @db.Text
  booking        bookings @relation(fields: [booking_id], references: [id])
}

model branches {
  id            Int        @id @default(autoincrement())
  branch_name   String     @db.VarChar(255)
  branch_status String     @db.VarChar(255)
  branch_color  String?    @db.VarChar(255)
  created_at    DateTime?  @default(now())
  updated_at    DateTime?  @default(now()) @updatedAt
  users         users[]
  cars          cars[]
  pickup_branch bookings[] @relation("pickup_branch")
  return_branch bookings[] @relation("return_branch")
}

model car_brands {
  id               Int          @id @default(autoincrement())
  car_brand_name   String       @db.VarChar(255)
  car_brand_status String       @db.VarChar(255)
  created_at       DateTime?    @default(now()) @db.Timestamp(0)
  updated_at       DateTime?    @default(now()) @updatedAt @db.Timestamp(0)
  car_models       car_models[]
  cars             cars[]
}

model car_models {
  id               Int              @id @default(autoincrement())
  car_brands       car_brands       @relation(fields: [car_brand_id], references: [id])
  car_brand_id     Int
  car_model_name   String           @db.VarChar(255)
  car_model_status String           @db.VarChar(255)
  created_at       DateTime?        @db.Timestamp(0)
  updated_at       DateTime?        @db.Timestamp(0)
  car_sub_models   car_sub_models[]
  cars             cars[]
}

model car_sub_models {
  id                   Int        @id @default(autoincrement())
  car_models           car_models @relation(fields: [car_model_id], references: [id])
  car_model_id         Int
  car_sub_model_name   String     @db.VarChar(255)
  car_sub_model_status String     @db.VarChar(255)
  created_at           DateTime?  @default(now()) @db.Timestamp(0)
  updated_at           DateTime?  @default(now()) @updatedAt @db.Timestamp(0)
  cars                 cars[]
}

model car_types {
  id              Int       @id @default(autoincrement())
  car_type_name   String    @db.VarChar(255)
  car_type_status String    @db.VarChar(255)
  created_at      DateTime? @default(now()) @db.Timestamp(0)
  updated_at      DateTime? @default(now()) @updatedAt @db.Timestamp(0)
  cars            cars[]
}

model cars {
  id                     Int                    @id @default(autoincrement())
  branch                 branches?              @relation(fields: [branch_id], references: [id])
  branch_id              Int
  car_type               car_types              @relation(fields: [car_type_id], references: [id])
  car_type_id            Int
  car_brand              car_brands             @relation(fields: [car_brand_id], references: [id])
  car_brand_id           Int
  car_model              car_models             @relation(fields: [car_model_id], references: [id])
  car_model_id           Int
  car_sub_model          car_sub_models?        @relation(fields: [car_sub_model_id], references: [id])
  car_sub_model_id       Int?
  license_plate          String                 @db.VarChar(255)
  license_plate_province String                 @db.VarChar(255)
  year                   Int
  color                  String                 @db.VarChar(255)
  color_code             String?                @db.VarChar(255)
  rental_per_day         Int
  driver_per_day         Int
  deposit                Int
  excess_houre_free      Int
  excess_houre_charge    Int
  excess_price           Int
  car_status             String                 @db.VarChar(255)
  created_at             DateTime?              @default(now()) @db.Timestamp(0)
  updated_at             DateTime?              @default(now()) @updatedAt @db.Timestamp(0)
  uploads                uploads[]
  bookings               bookings[]
  account_transactions   account_transactions[]
}

model customers {
  id                             Int        @id @default(autoincrement())
  customer_name                  String     @db.VarChar(255)
  customer_nickname              String?    @db.VarChar(255)
  customer_sex                   String?    @db.VarChar(255)
  customer_tel                   String?    @db.VarChar(255)
  customer_tel_backup            String?    @db.VarChar(255)
  customer_citizen_id            String?    @db.VarChar(255)
  customer_citizen_expiry        String?    @db.VarChar(255)
  customer_driver_license        String?    @db.VarChar(255)
  customer_driver_license_expiry String?    @db.VarChar(255)
  customer_image                 String?    @db.VarChar(255)
  customer_status                String?    @db.VarChar(255)
  created_at                     DateTime?  @default(now()) @db.Timestamp(0)
  updated_at                     DateTime?  @default(now()) @updatedAt @db.Timestamp(0)
  bookings                       bookings[]
}

model accounts {
  id                   Int                    @id @default(autoincrement())
  account_name         String                 @db.VarChar(255)
  account_number       String                 @db.VarChar(255)
  account_bank         String                 @db.VarChar(255)
  account_status       String                 @db.VarChar(255)
  created_at           DateTime?              @default(now()) @db.Timestamp(0)
  updated_at           DateTime?              @default(now()) @updatedAt @db.Timestamp(0)
  account_transactions account_transactions[]
}

model account_transactions {
  id                 Int       @id @default(autoincrement())
  type               String?
  account_id         Int
  booking_id         Int?
  car_id             Int?
  transaction_type   String    @db.VarChar(255)
  transaction_date   DateTime  @default(now()) @db.Timestamp(0)
  transaction_amount Int
  transaction_note   String?   @db.Text
  created_at         DateTime? @default(now()) @db.Timestamp(0)
  updated_at         DateTime? @default(now()) @updatedAt @db.Timestamp(0)
  account            accounts  @relation(fields: [account_id], references: [id])
  booking            bookings? @relation(fields: [booking_id], references: [id])
  car                cars?     @relation(fields: [car_id], references: [id])
  uploads            uploads[]
}

model uploads {
  id                     Int                   @id @default(autoincrement())
  order                  Int?
  car_id                 Int?
  booking_id             Int?
  account_transaction_id Int?
  type                   String
  file_name              String
  extension              String?
  size                   Int                   @default(0)
  file_path              String
  createdAt              DateTime              @default(now()) @db.Timestamp(0)
  car                    cars?                 @relation(fields: [car_id], references: [id])
  booking                bookings?             @relation(fields: [booking_id], references: [id])
  account_transaction    account_transactions? @relation(fields: [account_transaction_id], references: [id])
}

model users {
  id                Int       @id @default(autoincrement())
  branch            branches? @relation(fields: [branch_id], references: [id])
  branch_id         Int?
  name              String    @db.VarChar(255)
  email             String    @unique(map: "users_email_unique") @db.VarChar(255)
  email_verified_at DateTime? @db.Timestamp(0)
  level             String?   @db.VarChar(255)
  password          String    @db.VarChar(255)
  status            String    @db.VarChar(255)
  remember_token    String?   @db.VarChar(100)
  created_at        DateTime? @default(now()) @db.Timestamp(0)
  updated_at        DateTime? @default(now()) @updatedAt @db.Timestamp(0)
}
